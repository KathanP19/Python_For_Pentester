import sys
import requests
import socket
import argparse
import os


options = argparse.ArgumentParser(description="Simple Subdomain BruteForcer Made in Python", formatter_class=argparse.ArgumentDefaultsHelpFormatter)
options.add_argument("-t","--target", type=str, action='store', required=True, help='Target to Bruteforce "eg.sony.com"')
options.add_argument("-o","--output",type=str,action='store',required=False, help='Output file in which you want to save.',default='output.txt', nargs='?')
options.add_argument("-w","--wordlist",type=str,action='store',required=False, help='Wordlist for Bruteforcing Subdomain\'s')
args = options.parse_args()


sublist = ['dev','admin','prod','test','pro','cdn']
target = args.target
wordlist_file = args.wordlist
outputfile= args.output
if os.path.exists(outputfile):
    os.remove(outputfile)
else:
    pass

def sub_brute(sublist):
    #print(sublist)
    for sub in sublist:
        #print('Value ',sub)
        subdomain = f'http://{sub}.{target}'
        subdomain_ip= f'{sub}.{target}'

        try:
            r = requests.get(subdomain, timeout=10)
            ips = socket.gethostbyname(subdomain_ip)
            if args.output is not None:
                sub_with_ip = f'{subdomain} {ips} Redirects --> {r.url}'
                file1= open(outputfile,'a')
                file1.write("{}\n".format(sub_with_ip))
                file1.close()
        except requests.ConnectionError:
            pass
        else:
            print('Valid Subdomain: ',subdomain,ips,' --> ',r.url)

if wordlist_file is not None:
    with open(wordlist_file, encoding='utf16',errors='ignore') as file:
        lines = file.readlines()
        lines = [line.rstrip() for line in lines]
        sub_brute(lines)
else:
    sub_brute(sublist)
